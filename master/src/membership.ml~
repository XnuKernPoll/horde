module Member = struct
  type t = {protocol: string; host: string; port: int}

  let t =
    let open Depyt in
    record "t" (fun protocol host port -> {protocol; host; port;})
    |+ field protocol string (fun m -> m.protocol) 
    |+ field host string (fun m -> m.host)
    |+ field port int (fun m -> m.port)
    |> sealr      
             
  let to_string m =
    let fs = (Depyt.pp_json t) m in
    Fmt.strf "%a \n" fs 

  let of_string body =
    let decoder = Jsonm.decoder (`String body) in 
    Depyt.decode_json t decoder
                    
    
end
                  
